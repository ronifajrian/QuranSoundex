/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quransoundex;

import com.sun.java.accessibility.util.EventID;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.Query;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.SwingUtilities;
import javax.swing.event.RowSorterEvent;
import javax.swing.event.RowSorterListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static quransoundex.SoundEx.doSoundexIND;

/**
 *
 * @author ronifajrian
 */
public class GUI extends javax.swing.JFrame {
    
    public ArrayList<String[]> Data = new ArrayList<String[]>();
    public ArrayList<String[]> fonetikData = new ArrayList<String[]>();
   
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        queryTextInput = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fonetis = new javax.swing.JLabel();
        browseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tampilQuran = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelHasil = new javax.swing.JTable();
        browseText = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        presisi = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tampilAyat = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        normal1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        queryTextInput.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                queryTextInputComponentHidden(evt);
            }
        });
        queryTextInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryTextInputActionPerformed(evt);
            }
        });

        search.setText("Cari");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel1.setText("Kode fonetis Query : ");

        fonetis.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        fonetis.setText("kodeFonetis");

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        tampilQuran.setEditable(false);
        tampilQuran.setColumns(20);
        tampilQuran.setRows(5);
        jScrollPane1.setViewportView(tampilQuran);

        tabelHasil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Surat", "Match", "Similarity", "Teks Ayat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelHasil.getTableHeader().setReorderingAllowed(false);
        tabelHasil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelHasilMouseClicked(evt);
            }
        });
        tabelHasil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelHasilKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabelHasil);
        if (tabelHasil.getColumnModel().getColumnCount() > 0) {
            tabelHasil.getColumnModel().getColumn(0).setResizable(false);
            tabelHasil.getColumnModel().getColumn(0).setPreferredWidth(45);
            tabelHasil.getColumnModel().getColumn(1).setPreferredWidth(205);
            tabelHasil.getColumnModel().getColumn(2).setPreferredWidth(90);
            tabelHasil.getColumnModel().getColumn(3).setPreferredWidth(70);
            tabelHasil.getColumnModel().getColumn(4).setPreferredWidth(600);
        }

        browseText.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        browseText.setText("Dataset");

        jLabel2.setText("Presisi : ");

        presisi.setText("%");

        tampilAyat.setEditable(false);
        tampilAyat.setColumns(20);
        tampilAyat.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        tampilAyat.setLineWrap(true);
        tampilAyat.setRows(5);
        tampilAyat.setWrapStyleWord(true);
        jScrollPane3.setViewportView(tampilAyat);

        jLabel3.setText("Normalisasi Query : ");

        normal1.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        normal1.setText("normalisasi");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fonetis)
                                .addGap(0, 581, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(browseButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(browseText)
                                .addGap(193, 193, 193)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(presisi))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(queryTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(search))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(normal1)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseButton)
                    .addComponent(browseText)
                    .addComponent(jLabel2)
                    .addComponent(presisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queryTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fonetis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(normal1))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(814, 726));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    public void simpanFonetik(){
        SoundEx sound = new SoundEx();
        for(int i=0; i < this.Data.size(); i++){
                String kalimat = this.Data.get(i)[3].toLowerCase();
               
                String[] katakata = kalimat.split(" ");
                String[] katakataFonetik = kalimat.split(" ");
                
                for (int j = 0; j< katakata.length; j++){
                    String kataNormalisasi = sound.normalize(katakata[j]);
                    katakataFonetik[j] = sound.doSoundexIND(kataNormalisasi);
//cekKataNormalisasiDataset//katakataFonetik[j] = sound.normalize(katakata[j]);  
                }
                this.fonetikData.add(katakataFonetik);
                
        }
    }
    
    @SuppressWarnings("empty-statement")
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        String query = queryTextInput.getText().toLowerCase().replaceAll("\\s+", " "); //semua huruf query di ubah menjadi lowercase dan menangani spasi yang berlebih
        SoundEx sound = new SoundEx();
        String queryNormal = sound.normalize(query);
        normal1.setText(queryNormal);
        
        String[] arrayQuery = query.split(" ");
        String[] arrayQueryNormal = queryNormal.split(" ");
        String[] arrayKode = new String[arrayQueryNormal.length];
        for(int i=0; i< arrayQueryNormal.length; i++){
            arrayKode[i] = sound.doSoundexIND(arrayQueryNormal[i]);
        }
        System.out.println(String.join(" ", arrayKode));
        fonetis.setText(String.join(" ", arrayKode));
        
        tabelHasil.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);        
        
////////Error message kalau query kosong////////////////////////////////////////
        if(query.isEmpty()){
            JOptionPane.showMessageDialog(null,"Input Query tidak boleh kosong!","Invalid Query", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        ArrayList<Integer> arrayTrue = new ArrayList<Integer>();
        
       
       
//////////////////////fungsi deleteTabel row////////////////////////////////////
        DefaultTableModel model = (DefaultTableModel)tabelHasil.getModel();
        while(model.getRowCount() > 0){
            for(int i = 0; i < model.getRowCount(); i++){
                model.removeRow(i);
            }
        }
        
///////////////////Mencari dan Menampilkan data ke tabelHasil///////////////////
        String[] queryFonetik = arrayKode;
        JaroDistance jd = new JaroDistance();
        int indexFound = 0;
        double n=0;
        double nThresh=0;
      
            for (int i=0; i < this.fonetikData.size(); i++){
                for (int j=0; j < this.fonetikData.get(i).length; j++){
//                    String tmp = this.fonetikData.get(i)[j];
                    String[] tmp;
                    if (j + queryFonetik.length <= this.fonetikData.get(i).length){
                        tmp = Arrays.copyOfRange(this.fonetikData.get(i),j,j+queryFonetik.length);
                    } else {
                        continue;
                    }
                    
                    if (Arrays.deepEquals(queryFonetik, tmp)){
                        String[] katakata =  this.Data.get(i)[3].split(" ");
                        double similarity=0;
                        double SimJaroDistance = 0;
                        for (int k=j; k < j+queryFonetik.length; k++){
                            System.out.println(arrayQueryNormal[k-j].toLowerCase());
                            System.out.println(katakata[k].toLowerCase());
                            System.out.println("Similarity : "+jd.calculateJW(arrayQuery[k-j].toLowerCase(), katakata[k].toLowerCase()));
                            System.out.println("JD : " + jd.calculateJD(arrayQuery[k-j].toLowerCase(), katakata[k].toLowerCase()));
                            similarity += jd.calculateJW(arrayQuery[k-j].toLowerCase(), katakata[k].toLowerCase());
                            SimJaroDistance += jd.calculateJD(arrayQuery[k-j].toLowerCase(), katakata[k].toLowerCase());
                            
                        }
                        
                        //Rumus Rata2 umum string lebih dari satu
                        similarity = similarity/queryFonetik.length;
                        SimJaroDistance = SimJaroDistance/queryFonetik.length;
                        
                        
                        System.out.println(similarity);//hasil similarity
                        n++;//jumlah data yg ter-Retrieve 
                        
                        double threshold=0.7;//nilai threshold
                        if(SimJaroDistance >= threshold){
                            nThresh++;//jumlah data valid yang > threshold
                        }
                        
                        //jika jarodistance lebih kecil dari 0.7, similairtynya tetap
                        if(SimJaroDistance < threshold){
                            similarity = SimJaroDistance;
                        }
                        double similarityRound = (double) Math.round(similarity*100)/100;

                        // tampil
                        String[] RowData = new String[7];
//DihapusKarnaNoUrut////RowData[0] = Integer.toString(indexFound+1);
                        RowData[1] = "[QS " + this.Data.get(i)[0] + ":" + this.Data.get(i)[2] + "] " + this.Data.get(i)[1];
//                        RowData[2] = this.Data.get(i)[2];
                        RowData[2] = String.join(" ", Arrays.copyOfRange(katakata,j, j+queryFonetik.length));
                        RowData[3] = Double.toString(similarityRound);
                        //RowData[4] = Double.toString(SimJaroDistance);
                        RowData[4] = this.Data.get(i)[3];
                        model.addRow(RowData);

                        indexFound++;
                       
                    }                   
                }                 
            }
            System.out.println("nThreshold = "+nThresh);
            System.out.println("n = "+n);
            double hasilPresisi = (double) (nThresh / n)*100;
            String percentage = String.format("%2.02f", hasilPresisi);
            System.out.println(percentage);
            
            presisi.setText(percentage+"%");
         
////////Pengurutan Descending hasil Tabel hanya di kolom ke-4 (Similarity)//////
        
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(tabelHasil.getModel());
        tabelHasil.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        
        int coloumnIndexToSort = 3;
        sortKeys.add(new RowSorter.SortKey(coloumnIndexToSort, SortOrder.DESCENDING));
        
        sorter.setSortKeys(sortKeys);
        sorter.sort();
        
////////pengurutan hanya di similarity,tidak diberlakukan ke kolom lainnya//////
        sorter.setSortable(0, false);
        sorter.setSortable(1, false);
        sorter.setSortable(2, false);
        //sorter.setSortable(3, false);
        sorter.setSortable(4, false);
        
//////Membuat Kolom NOMOR tetap berurutan walau similarity sudah descending/////      
        int indexOfNoColoumn = 0;
        for(int i = 0; i < tabelHasil.getRowCount(); i++){
             tabelHasil.setValueAt(i+1, i, indexOfNoColoumn);
        }   
        
////////Error message kalau query tidak cocok///////////////////////////////////
        if(indexFound==0){
            JOptionPane.showMessageDialog(null,"Query tidak ditemukan!!","Invalid Query", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_searchActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        // TODO add your handling code here:
        SoundEx sound = new SoundEx();
        
        // browse file
        JFileChooser fc = new JFileChooser();
        

        int returnVal = fc.showDialog(jLabel1, "OK");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String namaFile = fc.getSelectedFile().getAbsolutePath();
            browseText.setText(fc.getSelectedFile().getName());
            File file = new File(namaFile);
            
////////////// simpen isi file ke atribut Data//////////////////////////////////
            String line;
            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                while((line = br.readLine()) != null){
                    String[] lineArray = line.split(",");
                    this.Data.add(lineArray);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            this.simpanFonetik();
            
/////////// menampilkan Data ke text area///////////////////////////////////////
            String showData = "";
            int n=0;
            for(int i=0; i < this.Data.size(); i++){
                showData += this.Data.get(i)[1] + " [QS ";
                showData += this.Data.get(i)[0] + ":";
                showData += this.Data.get(i)[2] + "] ";
                showData += this.Data.get(i)[3].toLowerCase() + "\n";  
                
//////////// Menampilkan data beserta fonetis//////////////////////////////////
                System.out.println("Kode Fonetis : ");
                for (int j=0; j < this.fonetikData.get(i).length; j++){
                    showData += this.fonetikData.get(i)[j] + " ";
                }
                showData += "\n\n";

///////////Menampilkan jumlah data string pada dataset/////////////////////////
//                  for (int j=0; j < this.fonetikData.get(i).length; j++){
//                      n++;
//                      showData += n + " ";
//                  }
//                      showData += "\n";
////lihat method simpanFonetik buat ubah fonetikData menjadi kata2 normalisasi//               
            }//jgn lupa ini dihapus atau dimunculkan kembali

            tampilQuran.setText(showData);
//            tampilQuran.setText("aaa");
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void queryTextInputComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_queryTextInputComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_queryTextInputComponentHidden

    private void queryTextInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryTextInputActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_queryTextInputActionPerformed

    private void tabelHasilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelHasilMouseClicked
        DefaultTableModel model = (DefaultTableModel)tabelHasil.getModel();
        
        int selectedRowIndex = tabelHasil.getSelectedRow();
        int SelectedSortedRowIndex = tabelHasil.convertRowIndexToModel(selectedRowIndex);
        
        tampilAyat.setText(model.getValueAt(SelectedSortedRowIndex, 4).toString());
    }//GEN-LAST:event_tabelHasilMouseClicked

    private void tabelHasilKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelHasilKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tabelHasil.getModel();
        
        int selectedRowIndex = tabelHasil.getSelectedRow();
        int SelectedSortedRowIndex = tabelHasil.convertRowIndexToModel(selectedRowIndex);
        
        tampilAyat.setText(model.getValueAt(SelectedSortedRowIndex, 4).toString());
        
    }//GEN-LAST:event_tabelHasilKeyReleased

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JLabel browseText;
    private javax.swing.JLabel fonetis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel normal1;
    private javax.swing.JLabel presisi;
    private javax.swing.JTextField queryTextInput;
    private javax.swing.JButton search;
    private javax.swing.JTable tabelHasil;
    private javax.swing.JTextArea tampilAyat;
    private javax.swing.JTextArea tampilQuran;
    // End of variables declaration//GEN-END:variables
}
